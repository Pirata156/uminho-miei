------------------------------------------------------------------------
This is the project README file for Worksheet 02 (Ficha Pratica 02).
Here, you'll find information about the Object-Oriented Programming (OOP) practical exercises.

PROJECT TITLE: Worksheet 02 (Ficha Pratica 02)
PURPOSE OF PROJECT: Object-Oriented Programming (OOP) classes' practical exercises.
VERSION or DATE: 22/04/2012
AUTHORS: PIRATA (https://github.com/Pirata156)
JAVA VERSION: Java 7

HOW TO START THIS PROJECT:
  1. Open the project in BlueJ.
  2. Compile each Java class for the respective exercise.
  3. Compile Javadoc for documentation.
  4. Use BlueJ tools for testing.

USER INSTRUCTIONS:

**Exercise Overview:**

This BlueJ project consists of Java classes, each corresponding to an exercise from Worksheet 02 of the Object-Oriented Programming course.
Each class is named Exercise01, Exercise02, and so forth, and contains a main method for execution.

- **Exercise01**: Declare, initialize, and print the elements of an integer array.
- **Exercise02**: Read N integer values into an array and determine the largest value entered and its position.
- **Exercise03**: Modify Exercise02 with an auxiliary method for reading N elements into an array.
- **Exercise04**: Further modification of Exercise03 to include reading and determination in auxiliary methods.
- **Exercise05**: Read N integer elements into an array, keeping it sorted in ascending order.
- **Exercise06**: Read N integer elements into an array, select two valid indices, and create a new array with elements between those indices.
- **Exercise07**: Read words into an array until "xxx" is entered, check if "xxx" exists, and remove it.
- **Exercise08**: Read gross monthly salaries, apply IRS withholding, and display gross salaries, withholdings, and net salaries.
- **Exercise09**: Simulate the Euromillions game, generate a key, ask for user's bet, and display correct numbers and stars.
- **Exercise10**: Modify Exercise09 to display the sum of all salaries and taxes withheld at the end.

Feel free to explore each Exercise class, read the Javadoc documentation, and use this project as a reference for your OOP exercises.

**Notes:**
Ensure that Javadoc documentation is generated for a detailed explanation of each class and its methods.

**Author's Notes:**
Feel free to reach out to the author (PIRATA) on GitHub for any clarifications or assistance.

**Exercises complete description:**

Ex 1: Declare, initialize and print the elements of an integer array.

Ex 2: Write a program that reads N integer values into an array and determines the largest value entered and its position in the array.

Ex 3: Modify the previous program so that reading the N elements into an integer array is performed using an auxiliary method that receives the value of N as a parameter.

Ex 4: Modify the previous program so that both the reading of the N elements and the determination of the maximum element of the array are carried out in auxiliary methods of the main() method.

Ex 5: Write a program that reads N integer elements into an array, but inserts them in such a way that the array always remains sorted in ascending order.

Ex 6: Write a program that reads N integer elements into an array, receives two valid indices from the read array and creates an array with only the elements between these two indices. Use a helper method.

Ex 7: Write a program that reads a series of words ending in “zzz” into an array, repeatedly accepts a word until the word “xxx” is entered, and checks whether such a word exists in the array. If it exists, the program must remove it from the array.

Ex 8: Write a program that reads the gross (gross) monthly salaries of the 20 employees of a company into an array.
The program will have a constant IRS withholding table, of the type
Gross Salary        % IRS Withholding
0 to 500 Euros      % 5
501 to 1000 Euros   % 10
1001 to 2000        % 20
2001 at 4000        % 30
4001 or more        % 40

The program is intended to create an array in which, for the respective employee whose gross salary is found in the read array, the respective IRS withholdings are entered. At the end, the program must present a list of gross salaries, IRS withholding and net salaries for the 20 employees.

Ex9: Write a program that simulates the Euromillions game.
The program randomly generates a key containing 5 numbers (from 1 to 50) and two stars (1 to 9). The user is then asked for 5 numbers and two stars (the bet).
The program should then present the generated key and the number of correct numbers and stars for the user's bet.
Naturally, arrays must be used to store the data.

Ex10: Modify the program in example 9 so that at the end the program displays the sum of all salaries and all taxes withheld from employees.

------------------------------------------------------------------------